          //      \        example has a relative branch in Big Delay
          //      \        example has a relative subroutine call in LoopStrt
          //      \        example has an <org> that moves the subroutines to 0x400
          //      \        example has a <dblock> that reserves named loctions
          //      
          //      
          //      $mSecDly       500                \ milliseconds Delay value for Big Delay
          //      $mSecCnt      2666                \ milliseconds Count value for Small Delay
          //      
000FF     // 00000             0x00FF    imm         \ push GP_out data (FF)
00032     // 00001             0x0032    imm         \ push GP_out address (32)
16043     // 00002                       io!         \ store AA to I/O address 30
16103     // 00003 
          //                           
000AA     // 00004 %LoopStrt   0x00AA    imm         \ push GP_out data (AA)
00030     // 00005             0x0030    imm         \ push GP_out address (30)
16043     // 00006                       io!         \ store AA to I/O address 30
16103     // 00007 
          //                           
001F4     // 00008             0x01F4    imm         \ Push 0D500 on the stack
14407     // 00009             %BigDly   scall       \ call Big Delay
          //      
00055     // 0000A             0x0055    imm         \ push GP_out data (55)
00030     // 0000B             0x0030    imm         \ push GP_out address (30)
16043     // 0000C                       io!         \ store 55 to I/O address 30
16103     // 0000D 
          //                           
001F4     // 0000E             $mSecDly  imm         \ Push $mSecDly on the stack
1C3F8     // 0000F             %BigDly   scallr      \ call %BigDly
          //                   
10004     // 00010             %LoopStrt ubranch     \ branch to %LoopStrt
          //      
          //      
          // 00400             0x0400    <org>       \ org memory to 0x400
          //      
00000     // 00400 %SmallDly   0x0000    imm         \ Small DELAY subroutine Push 0000
16600     // 00401                       invert          
16203     // 00402                       +
16011     // 00403                       dup
12406     // 00404             %RetSD    0branch     \ branch to %RetSD
10400     // 00405             %SmallDly ubranch     \ ubranch to %SmallDly
1618F     // 00406 %RetSD                pexit       \ return from sub with stack pop
          //      
00001     // 00407 %BigDly     0x0001    imm         \ Big DELAY subroutine Push 0001
16C03     // 00408                       -           \ Subtract 1 from BigDly loopcount
          //                  
00A6A     // 00409             $mSecCnt  imm         \ push 0d2666 (1 millisecond)
14400     // 0040A             %SmallDly scall       \ call %SmallDly
          //      
16011     // 0040B                       dup         \ dup BigDly loopcount
00000     // 0040C             0x0000    imm         \ push 0 on stack
16703     // 0040D                       =           \ compare BigDly loopcount to 0
1BFF9     // 0040E             %BigDly   0branchr    \ branch to %BigDly if loopcount not 0
1618F     // 0040F %RetBD                pexit       \ return from sub with stack pop
          //      
          // 00410 %Var01             1  <dblock>    \ creat  1 word memory block named %Var01
          // 00411 %Blk6              6  <dblock>    \ create 6 word block with 1st location named %Blk6
          //      
          //      
          // 00500             0x0500    <org>       \ org memory to 0x500
          //      
0DEAD     // 00500 %Var02      0xDEAD    <dword>     \ create  1 word variable named %Var02 = 0xDEAD
          // 00501 %BlkA            0xA  <dblock>    \ create 10 word memory block with 1st location named %Blk8
0BEEF     // 0050B %Var03      0xBEEF    <dword>     \ create  1 word variable named %Var02 = 0xBEEF
